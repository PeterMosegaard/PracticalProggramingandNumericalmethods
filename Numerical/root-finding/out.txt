Exercise A:

2. System of equations: initial guess (x,y)=(10,-5). Root found at:
x=
9.10615
1.09816e-05

3. Rosenbrock's valley function: initial guess (x,y)=(5,5). Root found at:
x=
1
1

4. Himmelblau: initial guess (x,y)=(5,0). Root found at:
x=
3.58443
-1.84813


Exercise B: The jacobian is now calculated numerically.

2. System of equations: initial guess (x,y)=(10,-5). Root found at:
x=
9.10615
1.09816e-05
Steps taken with numerical jacobian: 52
Steps taken with analytical jacobian: 52
Function calls with numerical jacobian: 156
Function calls with analytical jacobian: 156

3. Rosenbrock's valley function: initial guess (x,y)=(5,5). Root found at:
x=
1
1
Steps taken with numerical jacobian: 5267
Steps taken with analytical jacobian: 5257
Function calls with numerical jacobian: 66748
Function calls with analytical jacobian: 66611

4. Himmelblau: initial guess (x,y)=(5,0). Root found at:
x=
3.58443
-1.84813
Steps taken with numerical jacobian: 6
Steps taken with analytical jacobian: 8
Function calls with numerical jacobian: 8
Function calls with analytical jacobian: 8

GSL-root finder:

I now use gsl_multiroot_fsolver to find the roots of the previous functions. I use the same initial guesses.

System of linear equations. Root found at
x=
9.10615
1.09816e-05
In 26 iterations

Rosenbrock function: Root found at
x=
1
1
In 5 iterations

Himmelblau function: Root found at
x=
3.58443
-1.84813
In 9 iterations

The gsl-root finder is faster for the systems of equations and the rosenbrock. For the himmelblau GSL uses more iterations possibly because we use gradients.